#define svn_url     e:/trees/bison/trunk
%define svn_url     http://svn.netlabs.org/repos/ports/bison/trunk
%define svn_rev     1621

Summary: A GNU general-purpose parser generator
Name: bison
Version: 3.0.4
Release: 1%{?dist}
License: GPLv3+
Group: Development/Tools
Source: %{name}-%{version}%{?svn_rev:-r%{svn_rev}}.zip
URL: http://www.gnu.org/software/bison/
Vendor: bww bitwise works GmbH

# testsuite dependency
BuildRequires: autoconf
BuildRequires: flex

BuildRoot: %{_tmppath}/%{name}-root
BuildRequires: m4 >= 1.4
#BuildRequires: java-1.6.0-openjdk-devel
#Requires(post): /sbin/install-info
#Requires(preun): /sbin/install-info

Requires: m4 >= 1.4


%description
Bison is a general purpose parser generator that converts a grammar
description for an LALR(1) context-free grammar into a C program to
parse that grammar. Bison can be used to develop a wide range of
language parsers, from ones used in simple desk calculators to complex
programming languages. Bison is upwardly compatible with Yacc, so any
correctly written Yacc grammar should work with Bison without any
changes. If you know Yacc, you shouldn't have any trouble using
Bison. You do need to be very proficient in C programming to be able
to use Bison. Bison is only needed on systems that are used for
development.

If your system will be used for C development, you should install
Bison.

%package devel
Summary: -ly library for development using Bison-generated parsers
Group: Development/Libraries
Provides: bison-static = %{version}-%{release}

%description devel
The bison-devel package contains the -ly library sometimes used by
programs using Bison-generated parsers.  If you are developing programs
using Bison, you might want to link with this library.  This library
is not required by all Bison-generated parsers, but may be employed by
simple programs to supply minimal support for the generated parsers.

# -ly is kept static.  It only contains two symbols: main and yyerror,
# and both of these are extremely simple (couple lines of C total).
# It doesn't really pay off to introduce a shared library for that.
#
# Therefore -devel subpackage could have been created as -static, but
# the split was done in Jan 2005, which predates current guidelines.
# Besides there is logic to that: the library is devel in the sense
# that the generated parser could be distributed together with other
# sources, and only bison-devel would be necessary to wrap the build.

%package runtime
Summary: Runtime support files used by Bison-generated parsers
Group: Development/Libraries

%description runtime
The bison-runtime package contains files used at runtime by parsers
that Bison generates.  Packages whose binaries contain parsers
generated by Bison should depend on bison-runtime to ensure that
these files are available.  See the Internationalization in the
Bison manual section for more information.

%debug_package

%prep
%if %{?svn_rev:%(sh -c 'if test -f "%{_sourcedir}/%{name}-%{version}-r%{svn_rev}.zip" ; then echo 1 ; else echo 0 ; fi')}%{!?svn_rev):0}
%setup -q
%else
%setup -n "%{name}-%{version}" -Tc
svn export %{?svn_rev:-r %{svn_rev}} %{svn_url} . --force
rm -f "%{_sourcedir}/%{name}-%{version}%{?svn_rev:-r%{svn_rev}}.zip"
(cd .. && zip -SrX9 "%{_sourcedir}/%{name}-%{version}%{?svn_rev:-r%{svn_rev}}.zip" "%{name}-%{version}")
%endif

# work-around Rpath
autoreconf -fi

%build
export LDFLAGS="-Zhigh-mem -Zomf -Zargs-wild -Zargs-resp"
%configure --docdir=%{_docdir}/%{name}-%{version}
make %{?_smp_mflags}

%check
export POSIXLY_CORRECT=1
# checks are still disabled, beside test 385 all work 
# test 385 gives error 22 in printf()
#make check
#make maintainer-check

%install
rm -rf $RPM_BUILD_ROOT
%makeinstall

# Remove unpackaged files.
rm -f $RPM_BUILD_ROOT/%{_bindir}/yacc
rm -f $RPM_BUILD_ROOT/%{_infodir}/dir
rm -f $RPM_BUILD_ROOT/%{_mandir}/man1/yacc*
rm -f $RPM_BUILD_ROOT/%{_docdir}/%{name}/examples/calc++/*
rm -f $RPM_BUILD_ROOT/%{_docdir}/%{name}/examples/mfcalc/*
rm -f $RPM_BUILD_ROOT/%{_docdir}/%{name}/examples/rpcalc/*

%find_lang %{name}
%find_lang %{name}-runtime

gzip -9nf ${RPM_BUILD_ROOT}%{_infodir}/bison.info*

%post
#if [ -f %{_infodir}/bison.info.gz ]; then # for --excludedocs
#   /sbin/install-info %{_infodir}/bison.info.gz %{_infodir}/dir --entry="* bison: (bison).                        The GNU parser generator." || :
#fi

%preun
#if [ $1 = 0 ]; then
#    if [ -f %{_infodir}/bison.info.gz ]; then # for --excludedocs
#      /sbin/install-info --delete %{_infodir}/bison.info.gz %{_infodir}/dir --entry="* bison: (bison).                        The GNU parser generator." || :
#    fi
#fi


%clean
rm -rf $RPM_BUILD_ROOT


# The distribution contains also source files. These are used by m4
# when the target parser file is generated.
%files -f %{name}.lang
%defattr(-,root,root)
%doc AUTHORS ChangeLog NEWS README THANKS TODO COPYING
%{_mandir}/*/bison*
%{_datadir}/bison
%{_infodir}/bison.info*
%{_bindir}/bison.exe
%{_datadir}/aclocal/bison*.m4

%files -f %{name}-runtime.lang runtime
%doc COPYING

%files devel
%doc COPYING
%defattr(-,root,root)
%{_libdir}/liby.a


%changelog
* Mon Jun 27 2016 Silvan Scherrer <silvan.scherrer@aroa.ch> 3.0.4-1
- update to version 3.0.4
- add debug package

* Tue Feb 28 2012 yd
- fixed m4 executable location.

* Fri Jan 06 2012 yd
- initial unixroot build.
